---
- set_fact: kafka_ingester_host_dir=/srv/services/kafka-ingester

- file: path="{{ item }}" state=directory mode=0777
  with_items:
    - "{{ kafka_ingester_host_dir }}"
    - "{{ kafka_ingester_conf_dir }}"
    - "{{ kafka_ingester_log_dir }}"

- file: src="{{ kafka_ingester_conf_dir }}" dest="{{ kafka_ingester_host_dir }}/conf" state=link force=yes

- file: src="{{ kafka_ingester_log_dir }}" dest="{{ kafka_ingester_host_dir }}/log" state=link force=yes

- name: copy logger props
  template: src=templates/logback.xml.j2 dest="{{ kafka_ingester_host_dir }}/conf/logback.xml"
  notify: restart kafka-ingester

- name: copy server props
  template: src=templates/application.conf.j2 dest="{{ kafka_ingester_host_dir }}/conf/application.conf"
  notify: restart kafka-ingester

- meta: flush_handlers

- name: add container to whitelist
  set_fact: docker_containers_whitelist="{{ docker_containers_whitelist }} + [ 'kafka-ingester' ]"
  tags: always

- name: start kafka ingester
  docker_container:
    name: kafka-ingester
    state: started
    restart_policy: unless-stopped
    image: "{{ docker_registry }}/lgi/ingester:1.7"
    recreate: "{{ kafka_ingester_restart_docker|default('no') }}"
    network_mode: host
    log_driver: json-file
    ulimits: "nofile:1048576:1048576"
    command: "-J-Xmx2048m -J-Xmn1024m -J-XX:+UseG1GC -Dconfig.file=/conf/application.conf -Dlogback.configurationFile=/conf/logback.xml -Dcom.sun.management.jmxremote -Dcom.sun.management.jmxremote.authenticate=false -Dcom.sun.management.jmxremote.ssl=false -Dcom.sun.management.jmxremote.port={{ kafka_ingester_jmx_port }}"
    env:
      YOURKIT_AGENT_STARTUP_OPTIONS: "sessionname=kafka-ingester,listen=127.0.0.1:{{ kafka_ingester_profiling_port }},delay=10000,disableall"
    volumes:
      - "{{ kafka_ingester_host_dir }}/conf:/conf:ro"
      - "{{ kafka_ingester_host_dir }}/log:/log"
